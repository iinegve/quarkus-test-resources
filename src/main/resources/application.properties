quarkus.http.port=8080

quarkus.log.level=INFO

# auth
quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus
quarkus.oidc.client-id=client
quarkus.oidc.credentials.secret=secret
quarkus.oidc.application-type=service

# kafka
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

mp.messaging.outgoing.simple-message.connector=smallrye-kafka
mp.messaging.outgoing.simple-message.topic=simple-message
mp.messaging.outgoing.simple-message.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer
mp.messaging.outgoing.simple-message.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# keycloak
app.keycloak.server=http://localhost:8180/auth
app.keycloak.admin.realm=master
app.keycloak.admin.name=admin
app.keycloak.admin.password=admin
app.keycloak.admin.client.id=admin-cli

# how to configure realm, client.id and get secret:
#  https://www.keycloak.org/docs/latest/authorization_services/index.html#_service_client_api
app.keycloak.user.realm=quarkus
app.keycloak.user.client.id=${quarkus.oidc.client-id}
app.keycloak.user.credentials.secret=${quarkus.oidc.credentials.secret}

# jdbc
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres
quarkus.datasource.jdbc.max-size=16
